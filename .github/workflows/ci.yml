name: CI

on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always
  DATABASE_URL: mysql://docker:docker@127.0.0.1:3306/twimi

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: twimi
          MYSQL_USER: docker
          MYSQL_PASSWORD: docker
        ports:
          - 3306:3306
    env:
      SKIP_DOCKER_COMPOSE: true
      SQLX_VERSION: 0.6.2
      SQLX_FEATURES: rustls,mysql

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2
        id: cache-dependencies

      - name: Cache sqlx-cli
        uses: actions/cache@v3
        id: cache-sqlx
        with:
          path: |
            ~/.cargo/bin/sqlx
            ~/.cargo/bin/cargo-sqlx
          key: ${{ runner.os }}-sqlx-${{ env.SQLX_VERSION }}

      - name: Install sqlx-cli
        uses: actions-rs/cargo@v1
        if: steps.cache-sqlx.outputs.cache-hit == false
        with:
          command: install
          args: >
            sqlx-cli
            --force
            --version=${{ env.SQLX_VERSION }}
            --features ${{ env.SQLX_FEATURES }}
            --no-default-features
            --locked

      - name: Create & Migrate database
        run: ./scripts/init_mysql.sh

      - name: Check if sqlx-data.json is up-to-date
        run: cargo sqlx prepare --check --merged

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test

  lint:
    name: Lint
    runs-on: ubuntu-latest
    env:
      SQLX_OFFLINE: true
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Run rustfmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: Run clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: -- -D warnings
